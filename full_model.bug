model {
    ##########################################################################
    # Likelihood
    for (i in 1:n_tree) {
        for (t in (first_obs_period[i] + 1):last_obs_period[i]) {
            dbh_predicted[i, t] <- int +
                slp_dbh * dbh_latent[i, t - 1] +
                slp_dbh_sq * pow(dbh_latent[i, t - 1], 2) +
                slp_WD * WD[i] +
                slp_WD_sq * WD_sq[i] +
                slp_mcwd * mcwd[i, t] +
                slp_mcwd_sq * mcwd_sq[i, t] +
                int_ijk[i] +
                int_jk[plot_ID[i]] +
                int_k[site_ID[i]] +
                int_t[t] +
                B_g[genus_ID[i], 1] +
                B_g[genus_ID[i], 2] * mcwd[i, t] +
                B_g[genus_ID[i], 3] * mcwd_sq[i, t] +
                B_g[genus_ID[i], 4] * dbh_latent[i, t - 1] +
                B_g[genus_ID[i], 5] * pow(dbh_latent[i, t - 1], 2)

            dbh_latent[i, t] ~ dnorm(dbh_predicted[i, t], prec_proc)
        }

        for (t in (first_obs_period[i]):last_obs_period[i]) {
            dbh[i, t] ~ dnorm(dbh_latent[i, t], prec_obs)
        }
        # Specially handle first latent dbh (following Eitzen, 2013):
        dbh_latent[i, first_obs_period[i]] ~ dnorm(0, 1.0E-4)
    }


    ##########################################################################
    # Fixed effects
    int ~ dnorm(0, 1.0E-4)
    slp_dbh ~ dnorm(0, 1.0E-4)
    slp_dbh_sq ~ dnorm(0, 1.0E-4)
    slp_WD ~ dnorm(0, 1.0E-4)
    slp_WD_sq ~ dnorm(0, 1.0E-4)
    slp_mcwd ~ dnorm(0, 1.0E-4)
    slp_mcwd_sq ~ dnorm(0, 1.0E-4)

    prec_obs <- pow(sigma_obs, -2)
    # Base observation sigma on precision of diameter measurements, following 
    # Eitzel 2013
    sigma_obs ~ dunif(0.007034428, 100)

    prec_proc <- pow(sigma_proc, -2)
    sigma_proc ~ dunif(0, 100)

    ##########################################################################
    # Nested random effects
    for (i in 1:n_tree) {
        int_ijk[i] ~ dnorm(0, tau_int_ijk)
    }
    tau_int_ijk <- pow(sigma_int_ijk, -2)
    sigma_int_ijk ~ dunif(0, 100)

    for (j in 1:n_plot) {
        int_jk[j] ~ dnorm(0, tau_int_jk)
    }
    tau_int_jk <- pow(sigma_int_jk, -2)
    sigma_int_jk ~ dunif(0, 100)

    for (k in 1:n_site) {
        int_k[k] ~ dnorm(0, tau_int_k)
    }
    tau_int_k <- pow(sigma_int_k, -2)
    sigma_int_k ~ dunif(0, 100)

    ##########################################################################
    # Period random effects (crossed)
    
    for (t in 1:n_period) {
        int_t[t] ~ dnorm(0, tau_int_t)
    }
    tau_int_t <- pow(sigma_int_t, -2)
    sigma_int_t ~ dunif(0, 100)

    ##########################################################################
    # Correlated random effects at genus level (crossed). Based on Gelman and 
    # Hill pg. 377-378.
 
    for (g in 1:n_genus) {
        for (k in 1:k) {
            B_g[g, k] <- xi[k]*B_raw[g, k]
        }
        B_raw[g, 1:K] ~ dmnorm(mu_raw[], Tau_B_raw[ , ])
    }

    # Set up the means for the multivariate ranef distribution
    for (k in 1:K) {
        xi[k] ~ dunif(0, 100)
        mu_raw[k] ~ dnorm(0, 1.0E-4)
        mu[k] <- xi[k] * mu_raw[k]
    }

    Tau_B_raw[1:K, 1:K] ~ dwish(W[ , ], df)
    df <- K + 1
    Sigma_B_raw[1:K, 1:K] <- inverse(Tau_B_raw[,])
    for (k in 1:K) {
        for (k_prime in 1:K) {
            rho_B[k, k_prime] <- Sigma_B_raw[k, k_prime]/sqrt(Sigma_B_raw[k, k] * Sigma_B_raw[k_prime, k_prime])
        }
        sigma_B[k] <- abs(xi[k]) * sqrt(Sigma_B_raw[k, k])
    }
}
