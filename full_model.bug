model {
    for (tree_num in 1:n_tree) {
        for (obs_num in (first_obs_period[tree_num] + 1):last_obs_period[tree_num]) {
            dbh_predicted[tree_num, obs_num] <- intercept +
                slp_dbh * dbh_latent[tree_num, obs_num - 1] +
                slp_dbh_sq * pow(dbh_latent[tree_num, obs_num - 1], 2) +
                slp_WD * WD[tree_num] +
                slp_WD_sq * WD_sq[tree_num] +
                slp_spi * spi[tree_num, obs_num] +
                inter_spi_dbh * spi[tree_num, obs_num] * dbh_latent[tree_num, obs_num - 1] +
                inter_spi_WD * spi[tree_num, obs_num] * WD[tree_num] +
                b_ijk[tree_num] + b_jk[plot_ID[tree_num]] + b_k[site_ID[tree_num]]

            dbh_latent[tree_num, obs_num] ~ dnorm(dbh_predicted[tree_num, obs_num], proc_prec)
        }

        for (obs_num in (first_obs_period[tree_num]):last_obs_period[tree_num]) {
            dbh[tree_num, obs_num] ~ dnorm(dbh_latent[tree_num, obs_num], obs_prec)
        }
        # Specially handle first latent dbh (following Eitzen, 2013):
        dbh_latent[tree_num, first_obs_period[tree_num]] ~ dnorm(0, .000001)
    }

    intercept ~ dnorm(0, .0001)
    slp_dbh ~ dnorm(0, .0001)
    slp_dbh_sq ~ dnorm(0, .0001)
    slp_WD ~ dnorm(0, .0001)
    slp_WD_sq ~ dnorm(0, .0001)
    slp_spi ~ dnorm(0, .0001)
    inter_spi_dbh ~ dnorm(0, .0001)
    inter_spi_WD ~ dnorm(0, .0001)

    obs_prec <- pow(obs_sigma, -2)
    obs_sigma ~ dunif(0, 100)

    proc_prec <- pow(proc_sigma, -2)
    proc_sigma ~ dunif(0, 100)

    # Random effects
    for (n in 1:n_tree) {
        b_ijk[n] ~ dnorm(0, tau_ijk)
    }
    tau_ijk <- pow(sigma_ijk, -2)
    sigma_ijk ~ dunif(0, 100)

    for (n in 1:n_plot) {
        b_jk[n] ~ dnorm(0, tau_jk)
    }
    tau_jk <- pow(sigma_jk, -2)
    sigma_jk ~ dunif(0, 100)

    for (n in 1:n_site) {
        b_k[n] ~ dnorm(0, tau_k)
    }
    tau_k <- pow(sigma_k, -2)
    sigma_k ~ dunif(0, 100)
}
